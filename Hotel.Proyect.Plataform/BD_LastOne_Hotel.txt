USE MASTER
GO

IF DB_ID ('Hotel_BD') IS NOT NULL
BEGIN
	DROP DATABASE Hotel_BD
END
GO

CREATE DATABASE Hotel_BD
GO
 
USE Hotel_BD
GO

--ESTADO DE HABITACION
CREATE TABLE EstadoHabitacion
(
	idEstado INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	nombre VARCHAR(20) NOT NULL
)
GO

--habitacion
INSERT INTO EstadoHabitacion (nombre) VALUES('Ocupado')
INSERT INTO EstadoHabitacion (nombre) VALUES('Libre')

SELECT * FROM EstadoHabitacion
GO


--TIPO HABITACION
CREATE TABLE TipoHabitacion
(
	idTipo INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	nombre VARCHAR(30) NOT NULL
)
GO

--TipoHabitacion
INSERT INTO TipoHabitacion(nombre) VALUES('Matrimonial')
INSERT INTO TipoHabitacion(nombre) VALUES('Sencillas')
INSERT INTO TipoHabitacion(nombre) VALUES('Dobles')
INSERT INTO TipoHabitacion(nombre) VALUES('Familiares')
INSERT INTO TipoHabitacion(nombre) VALUES('Suite')

SELECT * FROM TipoHabitacion
GO

--HABITACION
CREATE TABLE Habitacion 
(
	idHabitacion INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	nombre CHAR(3) NOT NULL,
	descripcion VARCHAR(500) NOT NULL,
	idEstado INT REFERENCES TipoHabitacion,
	idTipo INT  REFERENCES EstadoHabitacion,
	cantidad INT NOT NULL,
	precio MONEY NOT NULL
)
GO

--Habitacion
INSERT INTO Habitacion (nombre,descripcion,idEstado,idTipo,cantidad,precio) VALUES ('401','Estas elegantes habitaciones ase encuentran en planta superior del edificio, podran disfrutar de la vista panoramica del mar Limeño.',1,1,2,'60.00')
INSERT INTO Habitacion (nombre,descripcion,idEstado,idTipo,cantidad,precio) VALUES ('402','Estas elegantes habitaciones ase encuentran en planta superior del edificio, podran disfrutar de la vista panoramica del mar Limeño.',2,2,1,'40.00')
INSERT INTO Habitacion (nombre,descripcion,idEstado,idTipo,cantidad,precio) VALUES ('403','Estas elegantes habitaciones ase encuentran en planta superior del edificio, podran disfrutar de la vista panoramica del mar Limeño.',1,1,3,'35.00')
INSERT INTO Habitacion (nombre,descripcion,idEstado,idTipo,cantidad,precio) VALUES ('404','Estas elegantes habitaciones ase encuentran en planta superior del edificio, podran disfrutar de la vista panoramica del mar Limeño.',2,2,2,'77.00')
INSERT INTO Habitacion (nombre,descripcion,idEstado,idTipo,cantidad,precio) VALUES ('405','Estas elegantes habitaciones ase encuentran en planta superior del edificio, podran disfrutar de la vista panoramica del mar Limeño.',1,1,3,'24.00')

SELECT * FROM Habitacion
GO

--TIPO USUARIO 
create table TipoUsuario
(
 idtipoUsuario INT PRIMARY KEY,
 descripcion VARCHAR(20) not null
)
go

--TipoUsuario
INSERT INTO TipoUsuario(idtipoUsuario,descripcion)VALUES(1,'Administrador')
INSERT INTO TipoUsuario(idtipoUsuario,descripcion)VALUES(2,'Cliente')

SELECT * FROM TipoUsuario


--USUARIO
create table Usuario
(
 idUsuario INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
 dni CHAR(8) NOT NULL,
 nombre VARCHAR(40) NOT NULL,
 apellidoPaterno VARCHAR(40) NOT NULL,
 apellidoMaterno VARCHAR(40) NOT NULL,
 correo varchar(40)not null,
 contraseña char(20) not null,
 idtipoUsuario INT default 2 REFERENCES TipoUsuario,
)
go


--Usuario
INSERT INTO Usuario VALUES(75896356,'Veronica','Narvaez','Tapia','vero@outlook.com','vero123', 1)
/*INSERT INTO Usuario VALUES(85962536,'Miriam','Salazar','Miranda','miriamSM@gmail.com','miri1234')
INSERT INTO Usuario VALUES(85962536,'Daniel','Enrique','Manrique','dani@hotmail.com','dani12EM')
INSERT INTO Usuario VALUES(85962536,'Liz','Casazola','Aguilar','lizca@gmail.com','li*ca*')
INSERT INTO Usuario VALUES(85962536,'Rodrigo','Narvaez','Miranda','liz@outlook.com','2018*qw')*/

SELECT * FROM Usuario
GO

--RESERVA DE HABITACION
CREATE TABLE ReservaHabitacion
(
	idReserva INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	fechaIngreso DATE NOT NULL,
	fechaSalida DATE NOT NULL,
	idHabitacion INT REFERENCES Habitacion,
	idUsuario int REFERENCES Usuario
)
GO


--ReservaHabitacion
/*INSERT INTO ReservaHabitacion VALUES('12/12/2018','15/12/2018',2,1)
INSERT INTO ReservaHabitacion VALUES('20/10/2018','29/10/2018',2,2)
INSERT INTO ReservaHabitacion VALUES('21/11/2018','30/11/2018',2,2)
INSERT INTO ReservaHabitacion VALUES('10/10/2018','25/10/2018',2,3)
INSERT INTO ReservaHabitacion VALUES('12/01/2019','22/01/2019',2,2)*/

SELECT * FROM ReservaHabitacion
GO


CREATE TABLE Comments (
idComments int identity (1,1) primary key,
descripcion VARCHAR(500) NOT NULL,
idUsuario int REFERENCES Usuario
)

--PROCEDIMIENTO COMENTARIO
CREATE PROCEDURE SP_RegistrarComments
(
	@usuario VARCHAR(50),
	@desripcion VARCHAR(200)
)
AS
BEGIN
	 SELECT U.nombre, C.descripcion
	 FROM Comments AS C inner join Usuario AS U
	 ON C.idUsuario = U.idUsuario
END
GO


CREATE PROCEDURE SP_ListarCommentas
AS
BEGIN
	SELECT *
	FROM Comments
END
GO



/* INICIO-----  METODO DE PAGO -----INICIO*/
create table tp_TipoTarjeta(
 idTipoTarjeta int identity(1,1) primary key,
 nombreTipoTarjeta varchar(20)
)
go

insert into tp_TipoTarjeta values('Visa')
insert into tp_TipoTarjeta values('MasterCard')
insert into tp_TipoTarjeta values('Discover')
GO

select * from tp_TipoTarjeta
GO

create table tb_Tarjeta(
 idTarjeta int identity (1,1) primary key,
 idtipoTarjeta int foreign key references tp_TipoTarjeta,
 numeroTarjeta varchar(16),
 nombreTarjeta varchar(50),
 securityCodeTarjeta char(3),
 mesExpiracionTarjeta char(2),
 añoExpiracionTarjeta char(4),
 tarjetaHabilitada bit,
 lineaCredito decimal(10,2),
 creditoDisponible decimal(10,2)	
)
go

select * from tb_Tarjeta
GO

--Tarjeta Valida
insert into tb_Tarjeta values(1,'1234567812345678','Eren Jaegger','111','01','2021', 1, 100, 50)

--Tarjeta no habilitada
insert into tb_Tarjeta values(1,'1111222233334444','Armin Arlet','222','02','2022', 0, 100, 50)

--Tarjeta saldo insuficiente
insert into tb_Tarjeta values(1,'9999888877776666','Mickasa Ackerman','333','03','2023',1 ,100 , 99)
GO



/*procedimiento de metodo de pago*/
create proc sp_GetTarjetaByInfo(
 @idTipoTarjeta int,
 @numeroTarjeta varchar(16),
 @nombreTarjeta varchar(50),
 @securityCodeTarjeta char(3),
 @mesExpiracionTarjeta char(2),
 @añoExpiracionTarjeta char(4)
)
as
begin
    select tar.numeroTarjeta, tar.nombreTarjeta, tar.tarjetaHabilitada, tar.creditoDisponible
	from tb_Tarjeta tar
	where tar.idTipoTarjeta = @idTipoTarjeta
		  and tar.numeroTarjeta = @numeroTarjeta
		  and tar.nombreTarjeta = @nombreTarjeta
		  and tar.securityCodeTarjeta = @securityCodeTarjeta
		  and tar.mesExpiracionTarjeta = @mesExpiracionTarjeta
		  and tar.añoExpiracionTarjeta = @añoExpiracionTarjeta
end
GO

exec sp_GetTarjetaByInfo 1,'1234567812345678', 'Eren Jaegger' , '111', '01', '2021'
GO

SELECT * FROM 


/* FIN-----  METODO DE PAGO -----FIN*/

---

--Listar Habitaciones
CREATE PROCEDURE SP_ListarHabitaciones
AS
BEGIN
	SELECT H.idHabitacion ID, H.nombre Nombre, EH.nombre Estado, TH.nombre Tipo
	FROM Habitacion H INNER JOIN TipoHabitacion TH
	ON H.idTipo = TH.idTipo INNER JOIN EstadoHabitacion EH
	ON H.idEstado = EH.idEstado
END

EXECUTE SP_ListarHabitaciones
GO 

--Buscar Habitacion por ID
CREATE PROCEDURE SP_BuscarHabitacionByID
@ID INT
AS
BEGIN
	SELECT H.nombre Nombre, H.descripcion, EH.nombre Estado, TH.nombre Tipo, H.cantidad, H.precio
	FROM Habitacion H INNER JOIN TipoHabitacion TH
	ON H.idTipo = TH.idTipo INNER JOIN EstadoHabitacion EH
	ON H.idEstado = EH.idEstado
	WHERE H.idHabitacion = @ID
END
GO

EXECUTE SP_BuscarHabitacionByID 1
GO 

--Buscar Habitaciones por precio
CREATE PROCEDURE [dbo].[SP_BuscarHabitacionByPrecio]
(
	@Precio1 DECIMAL,
	@precio2 DECIMAL
)
AS
BEGIN
	SELECT H.nombre Nombre,
		   H.descripcion Descripcion,
		   EH.nombre Estado,
		   TH.nombre Tipo,
		   H.cantidad Cantidad,
		   H.precio Precio,
		   H.idHabitacion ID
	FROM Habitacion H INNER JOIN TipoHabitacion TH
	ON H.idTipo = th.idTipo INNER JOIN EstadoHabitacion EH
	ON H.idEstado = EH.idEstado
	WHERE precio BETWEEN @Precio1 AND @precio2
END
GO

EXECUTE SP_BuscarHabitacionByPrecio 40, 60
GO

--Reserva Habitacion
CREATE PROC [dbo].[SP_ReservaHabitacion]
(
@fechaIngreso date,
@fechaSalida date,
@idHabitacion int,
@idUsuario int
)
AS
BEGIN
	INSERT INTO ReservaHabitacion(fechaIngreso, fechaSalida, idHabitacion, idUsuario)
	VALUES(@fechaIngreso, @fechaSalida, @idHabitacion, @idUsuario)

	UPDATE Habitacion
		SET idEstado = 1
	WHERE idHabitacion = @idHabitacion
end
GO


EXECUTE SP_ReservaHabitacion '12/12/2018', '12/12/2018', 1, 1
GO

SELECT * FROM ReservaHabitacion
GO

--Agregar Usuario
CREATE PROCEDURE SP_RegistrarUsuario
(
@dni INT,
@nombre VARCHAR(40),
@apellidoPaterno VARCHAR(40),
@apellidoMaterno VARCHAR(40),
@correo VARCHAR(40),
@contraseña VARCHAR(20)
)
AS
BEGIN
	INSERT INTO Usuario (dni, nombre, apellidoPaterno, apellidoMaterno, correo, contraseña) 
	VALUES (@dni, @nombre, @apellidoPaterno, @apellidoMaterno, @correo, @contraseña)
END
GO

EXECUTE SP_RegistrarUsuario 12345678,'Eren','Jaegger','Ackerman','eren@gmail.com','eren123'
GO

SELECT * FROM Usuario
GO


--Buscar Habitaciones por precio
CREATE PROCEDURE SP_LoginUsuario
(
	@correo VARCHAR(30),
	@contraseña VARCHAR(30)
)
AS
BEGIN
	SELECT U.idUsuario ID, U.nombre Nombre, U.apellidoPaterno ApellidoPat, U.apellidoMaterno ApellidoMat 
	FROM Usuario U
	WHERE U.correo=@correo AND U.contraseña =@contraseña
END

EXECUTE SP_LoginUsuario 'eren@gmail.com', 'eren123'             
GO

--Registrar Comentario
CREATE PROCEDURE SP_RegistrarComments
(
	@descripcion varchar(500),
	@idUsuario int
)
AS
BEGIN
	 INSERT INTO Comments(descripcion, idUsuario)
	 VALUES(@descripcion, @idUsuario)
END
GO

--Listar Comentario
CREATE PROCEDURE SP_ListarComments
AS
BEGIN
	SELECT U.nombre AS Usuario, C.descripcion AS Descripcion
	FROM Comments AS C INNER JOIN Usuario AS U
	ON U.idUsuario = C.idUsuario
END
GO

